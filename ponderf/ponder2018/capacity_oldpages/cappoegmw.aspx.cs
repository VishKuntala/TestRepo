using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Web.Script.Serialization;
using System.Web.Services;
using Oracle.ManagedDataAccess.Client; //needed for connecting to AXIOM (or any oracle server)

public partial class capacity_cappoegmw : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

    }
    [WebMethod]
    public static string GetPOE2018NSB()
    {
        string sql = @"SELECT * FROM PONDER.POE2018NSB"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018NSBDRILL()
    {
        string sql = @"SELECT PONDER.PACE_POE.USID, PONDER.PACE_POE.PACE_NUMBER, PONDER.PLAN_BASE.JOB_NUMBER, PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PACE_POE.PRODUCT_SUBGROUP,
  TO_CHAR(PONDER.PACE_POE.RE020_ACTUAL, 'MM-DD-YYYY') AS RE020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI025_ACTUAL, 'MM-DD-YYYY') AS CI025_ACTUAL, 
  TO_CHAR(PONDER.PACE_POE.CI020_ACTUAL, 'MM-DD-YYYY') AS CI020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI050_ACTUAL, 'MM-DD-YYYY') AS CI050_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_ACTUAL, 'MM-DD-YYYY') AS ONAIR_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_FORECAST, 'MM-DD-YYYY') AS ONAIR_FORECAST
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE (PONDER.PACE_POE.STATUS = 'Active' OR PONDER.PACE_POE.STATUS = 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM = 'NSB'
  AND PONDER.PACE_POE.PRODUCT_GROUP = 'New Site'
  AND (PONDER.PACE_POE.POE_NAME = '2018 + NSB' OR PONDER.PACE_POE.POE_NAME = '2019 + NSB')
  AND (PONDER.PACE_POE.MARKET = 'ILLINOIS/WISCONSIN'
      OR PONDER.PACE_POE.MARKET = 'ND/SD/NE/MN/IA' 
      OR PONDER.PACE_POE.MARKET = 'MISSOURI/KANSAS' 
      OR PONDER.PACE_POE.MARKET = 'ARKANSAS/OKLAHOMA' 
      OR PONDER.PACE_POE.MARKET = 'NORTH TEXAS'
      OR PONDER.PACE_POE.MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
ORDER BY PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PACE_NUMBER"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018NSBryg()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(PACE_NUMBER) AS YTD_COMPLETE 
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME = '2018 + NSB' 
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS') 
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018NSBrygCUMU()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,    
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME = '2018 + NSB' 
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + NSB')  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') AND (POE_NAME = '2018 + NSB') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'  THEN PACE_NUMBER END) AS YTD_CUMU
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018LTE1C()
    {
        string sql = @"SELECT MARKET,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) AS POE_2018,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE,
    ROUND((COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) * 100 /
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY ROLLUP (MARKET)
ORDER BY MARKET"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018LTE1CDRILL()
    {
        string sql = @"SELECT PONDER.PACE_POE.USID, PONDER.PACE_POE.PACE_NUMBER, PONDER.PLAN_BASE.JOB_NUMBER, PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PACE_POE.PRODUCT_SUBGROUP,
  TO_CHAR(PONDER.PACE_POE.RE020_ACTUAL, 'MM-DD-YYYY') AS RE020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI025_ACTUAL, 'MM-DD-YYYY') AS CI025_ACTUAL, 
  TO_CHAR(PONDER.PACE_POE.CI020_ACTUAL, 'MM-DD-YYYY') AS CI020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI050_ACTUAL, 'MM-DD-YYYY') AS CI050_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_ACTUAL, 'MM-DD-YYYY') AS ONAIR_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_FORECAST, 'MM-DD-YYYY') AS ONAIR_FORECAST
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE (PONDER.PACE_POE.STATUS = 'Active' OR PONDER.PACE_POE.STATUS = 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE'  
  AND (PONDER.PACE_POE.POE_NAME = '2018 + LTE' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE')
  AND (PONDER.PACE_POE.MARKET = 'ILLINOIS/WISCONSIN'
      OR PONDER.PACE_POE.MARKET = 'ND/SD/NE/MN/IA' 
      OR PONDER.PACE_POE.MARKET = 'MISSOURI/KANSAS' 
      OR PONDER.PACE_POE.MARKET = 'ARKANSAS/OKLAHOMA' 
      OR PONDER.PACE_POE.MARKET = 'NORTH TEXAS'
      OR PONDER.PACE_POE.MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
ORDER BY PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PACE_NUMBER
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018LTE1Cryg()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(PACE_NUMBER) AS YTD_COMPLETE 
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND POE_NAME = '2018 + LTE'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')  
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018LTE1CrygCUMU()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,    
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND POE_NAME = '2018 + LTE'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') AND (POE_NAME = '2018 + LTE' OR POE_NAME = '2019 + LTE') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') AND (POE_NAME = '2018 + LTE') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_CUMU
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018LTEACDRILL()
    {
        string sql = @"SELECT PONDER.PACE_POE.USID, PONDER.PACE_POE.PACE_NUMBER, PONDER.PLAN_BASE.JOB_NUMBER, PONDER.PACE_POE.MARKET,   
  TO_CHAR(PONDER.PACE_POE.ONAIR_ACTUAL, 'MM-DD-YYYY') AS ONAIR_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_FORECAST, 'MM-DD-YYYY') AS ONAIR_FORECAST
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE (PONDER.PACE_POE.STATUS = 'Active' OR PONDER.PACE_POE.STATUS = 'Complete')
  AND (PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE 2C'
      OR PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE 3C'
      OR PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE 4C'
      OR PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE 5C'
      OR PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE 6C'
      OR PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE 7C')    
  AND (PONDER.PACE_POE.POE_NAME = '2018 + LTE 2C' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE 2C' OR PONDER.PACE_POE.POE_NAME = '2017 + LTE 2C'
      OR PONDER.PACE_POE.POE_NAME = '2018 + LTE 3C' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE 3C' OR PONDER.PACE_POE.POE_NAME = '2017 + LTE 3C'
      OR PONDER.PACE_POE.POE_NAME = '2018 + LTE 4C' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE 4C' OR PONDER.PACE_POE.POE_NAME = '2017 + LTE 4C'
      OR PONDER.PACE_POE.POE_NAME = '2018 + LTE 5C' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE 5C' OR PONDER.PACE_POE.POE_NAME = '2017 + LTE 5C'
      OR PONDER.PACE_POE.POE_NAME = '2018 + LTE 6C' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE 6C' OR PONDER.PACE_POE.POE_NAME = '2017 + LTE 6C'
      OR PONDER.PACE_POE.POE_NAME = '2018 + LTE 7C' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE 7C' OR PONDER.PACE_POE.POE_NAME = '2017 + LTE 7C')
  AND TO_CHAR(PONDER.PACE_POE.ONAIR_FORECAST, 'YYYY') = '2018'
  AND (PONDER.PACE_POE.MARKET = 'ILLINOIS/WISCONSIN'
      OR PONDER.PACE_POE.MARKET = 'ND/SD/NE/MN/IA' 
      OR PONDER.PACE_POE.MARKET = 'MISSOURI/KANSAS' 
      OR PONDER.PACE_POE.MARKET = 'ARKANSAS/OKLAHOMA' 
      OR PONDER.PACE_POE.MARKET = 'NORTH TEXAS'
      OR PONDER.PACE_POE.MARKET = 'SOUTH TEXAS')
ORDER BY PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PACE_NUMBER

"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018LTEACryg()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(PACE_NUMBER) AS YTD_COMPLETE 
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C'))
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' AND (POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')) AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' AND (POE_NAME IN ('2018 + LTE 2C', '2018 + LTE 3C', '2018 + LTE 4C', '2018 + LTE 5C', '2018 + LTE 6C', '2018 + LTE 7C')) 
    AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
"; //store your sql query in this string variable "sql"
http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018LTEACrygCUMU()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,    
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C')  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C')  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') AND (POE_NAME = '2018 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_CUMU
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C','LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
      '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C', 
      '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE20184T4RDRILL()
    {
        string sql = @"SELECT PONDER.PACE_POE.USID, PONDER.PACE_POE.PACE_NUMBER, PONDER.PLAN_BASE.JOB_NUMBER, PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PACE_POE.PRODUCT_SUBGROUP,
  TO_CHAR(PONDER.PACE_POE.RE020_ACTUAL, 'MM-DD-YYYY') AS RE020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI025_ACTUAL, 'MM-DD-YYYY') AS CI025_ACTUAL, 
  TO_CHAR(PONDER.PACE_POE.CI020_ACTUAL, 'MM-DD-YYYY') AS CI020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI050_ACTUAL, 'MM-DD-YYYY') AS CI050_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_ACTUAL, 'MM-DD-YYYY') AS ONAIR_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_FORECAST, 'MM-DD-YYYY') AS ONAIR_FORECAST
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE (PONDER.PACE_POE.STATUS = 'Active' OR PONDER.PACE_POE.STATUS = 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PONDER.PACE_POE.PRODUCT_GROUP = 'Antenna Modifications'
  AND PONDER.PACE_POE.PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND PONDER.PACE_POE.POE_NAME = 'CE + Antenna Modifications'
  AND (PONDER.PACE_POE.MARKET = 'ILLINOIS/WISCONSIN'
      OR PONDER.PACE_POE.MARKET = 'ND/SD/NE/MN/IA' 
      OR PONDER.PACE_POE.MARKET = 'MISSOURI/KANSAS' 
      OR PONDER.PACE_POE.MARKET = 'ARKANSAS/OKLAHOMA' 
      OR PONDER.PACE_POE.MARKET = 'NORTH TEXAS'
      OR PONDER.PACE_POE.MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(PONDER.PACE_POE.ONAIR_FORECAST, 'YYYY') = '2018'
ORDER BY PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PACE_NUMBER
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE20184T4Rryg()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(PACE_NUMBER) AS YTD_COMPLETE 
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' or TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970'  AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE20184T4RrygCUMU()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,    
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018')  THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-1970' OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') AND (TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_CUMU
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')  
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018LTEAC()
    {
        string sql = @"SELECT MARKET,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) AS POE_2018,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE,
    ROUND((COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) * 100 /
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE 2C'
      OR NATIONAL_PROGRAM = 'LTE 3C'
      OR NATIONAL_PROGRAM = 'LTE 4C'
      OR NATIONAL_PROGRAM = 'LTE 5C'
      OR NATIONAL_PROGRAM = 'LTE 6C'
      OR NATIONAL_PROGRAM = 'LTE 7C')    
  AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
GROUP BY ROLLUP (MARKET)
ORDER BY MARKET"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetCENFOR2018POENSB()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.MARKET,  
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') or TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = concat(TO_CHAR(sysdate, 'YYYY')+1,'-01')) --limit results to current year and the following January
) t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct MARKET
  from PONDER.PACE_POE
  where MARKET in (
    'ILLINOIS/WISCONSIN',
    'ND/SD/NE/MN/IA' ,
    'MISSOURI/KANSAS' ,
    'ARKANSAS/OKLAHOMA', 
    'NORTH TEXAS',
    'SOUTH TEXAS'
  )
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
  SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, REGION, MARKET, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), REGION, MARKET
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.MARKET = ONAIR.MARKET
order by t1.FORECAST_MONTH, t2.MARKET";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCENFOR2018POELTE1C()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.MARKET, 
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') or TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = concat(TO_CHAR(sysdate, 'YYYY')+1,'-01')) --limit results to current year and the following January
) t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct MARKET
  from PONDER.PACE_POE
  where MARKET in (
    'ILLINOIS/WISCONSIN',
    'ND/SD/NE/MN/IA' ,
    'MISSOURI/KANSAS' ,
    'ARKANSAS/OKLAHOMA', 
    'NORTH TEXAS',
    'SOUTH TEXAS'
  )
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
  SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, REGION, MARKET, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), REGION, MARKET
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.MARKET = ONAIR.MARKET

order by t1.FORECAST_MONTH, t2.MARKET
";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCENFOR2018POELTEAC()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.MARKET, 
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') or TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = concat(TO_CHAR(sysdate, 'YYYY')+1,'-01')) --limit results to current year and the following January
) t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct MARKET
  from PONDER.PACE_POE
  where MARKET in (
    'ILLINOIS/WISCONSIN',
    'ND/SD/NE/MN/IA' ,
    'MISSOURI/KANSAS' ,
    'ARKANSAS/OKLAHOMA', 
    'NORTH TEXAS',
    'SOUTH TEXAS'
  )
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
  SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, REGION, MARKET, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE 2C'
      OR NATIONAL_PROGRAM = 'LTE 3C'
      OR NATIONAL_PROGRAM = 'LTE 4C'
      OR NATIONAL_PROGRAM = 'LTE 5C'
      OR NATIONAL_PROGRAM = 'LTE 6C'
      OR NATIONAL_PROGRAM = 'LTE 7C')    
  AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), REGION, MARKET
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.MARKET = ONAIR.MARKET

order by t1.FORECAST_MONTH, t2.MARKET
";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut1()
    {
        //Construction Started
        string sql = @"SELECT * FROM PONDER.DONUT1_VIEW";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut2()
    {
        //Construction Started
        string sql = @"SELECT * FROM PONDER.DONUT2_VIEW";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut3()
    {
        //Construction Started
        string sql = @"SELECT * FROM PONDER.DONUT3_VIEW";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut4()
    {
        //Construction Started
        string sql = @"SELECT * FROM PONDER.DONUT4_VIEW";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut5()
    {
        //Construction Started
        string sql = @"SELECT * FROM PONDER.DONUT5_VIEW";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut6()
    {
        //Construction Started
        string sql = @"SELECT * FROM PONDER.DONUT6_VIEW";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCEN2018NSBMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME IN ('2018 + NSB', '2019 + NSB')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    /*[WebMethod]
    public static string GetCEN2018NSBMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    -- JI012 --
    COUNT(JI012_ACTUAL) AS JI012_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(JI012_ACTUAL) AS JI012_OVERALL_REMAINING,
    SUM(CASE
      WHEN JI012_ACTUAL < JI009_ACTUAL + 11 THEN 1
      WHEN JI012_ACTUAL IS NOT NULL AND JI009_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI012_BEFORE,
    SUM(CASE
      WHEN JI012_ACTUAL = JI009_ACTUAL + 11 THEN 1
      ELSE 0
    END) AS JI012_CURRENT,
    SUM(CASE
      WHEN JI012_ACTUAL > JI009_ACTUAL + 11 THEN 1
      ELSE 0
    END) AS JI012_AFTER,    
    SUM(CASE
      WHEN TO_CHAR(JI012_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND JI012_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI012_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(JI012_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND JI012_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI012_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(JI012_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND JI012_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI012_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(JI012_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND JI012_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI012_PAST_FORECAST,
    
    -- SS010 --
    COUNT(SS010_ACTUAL) AS SS010_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(SS010_ACTUAL) AS SS010_OVERALL_REMAINING,
    SUM(CASE
      WHEN SS010_ACTUAL < SS055_ACTUAL + 22 THEN 1
      WHEN SS010_ACTUAL IS NOT NULL AND SS055_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_BEFORE,
    SUM(CASE
      WHEN SS010_ACTUAL = SS055_ACTUAL + 22 THEN 1
      ELSE 0
    END) AS SS010_CURRENT,
    SUM(CASE
      WHEN SS010_ACTUAL > SS055_ACTUAL + 22 THEN 1
      ELSE 0
    END) AS SS010_AFTER,    
    SUM(CASE
      WHEN TO_CHAR(SS010_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS010_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS010_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(SS010_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_PAST_FORECAST,
    
    -- SS010_90 --
    COUNT(SS010_ACTUAL) AS SS010_90_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(SS010_ACTUAL) AS SS010_90_OVERALL_REMAINING,
    SUM(CASE
      WHEN SS010_ACTUAL < JI009_ACTUAL + 90 THEN 1
      WHEN SS010_ACTUAL IS NOT NULL AND JI009_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_90_BEFORE,
    SUM(CASE
      WHEN SS010_ACTUAL = JI009_ACTUAL + 90 THEN 1
      ELSE 0
    END) AS SS010_90_CURRENT,
    SUM(CASE
      WHEN SS010_ACTUAL > JI009_ACTUAL + 90 THEN 1
      ELSE 0
    END) AS SS010_90_AFTER,    
    SUM(CASE
      WHEN TO_CHAR(SS010_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_90_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS010_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_90_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS010_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_90_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(SS010_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS010_90_PAST_FORECAST,
    
    -- JI022 --
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(JI022_ACTUAL) AS JI022_OVERALL_REMAINING,
    SUM(CASE
      WHEN JI022_ACTUAL < SS010_ACTUAL + 11 THEN 1
      WHEN JI022_ACTUAL IS NOT NULL AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_BEFORE,
    SUM(CASE
      WHEN JI022_ACTUAL = SS010_ACTUAL + 11 THEN 1
      ELSE 0
    END) AS JI022_CURRENT,
    SUM(CASE
      WHEN JI022_ACTUAL > SS010_ACTUAL + 11 THEN 1
      ELSE 0
    END) AS JI022_AFTER,    
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_PAST_FORECAST,
    
    -- SS007 --
    COUNT(SS007_ACTUAL) AS SS007_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(SS007_ACTUAL) AS SS007_OVERALL_REMAINING,
    SUM(CASE
      WHEN SS007_ACTUAL < SS010_ACTUAL + 30 THEN 1
      WHEN SS007_ACTUAL IS NOT NULL AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_BEFORE,
    SUM(CASE
      WHEN SS007_ACTUAL = SS010_ACTUAL + 30 THEN 1
      ELSE 0
    END) AS SS007_CURRENT,
    SUM(CASE
      WHEN SS007_ACTUAL > SS010_ACTUAL + 30 THEN 1
      ELSE 0
    END) AS SS007_AFTER,    
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_PAST_FORECAST,
    
    -- SS020 --
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(SS020_ACTUAL) AS SS020_OVERALL_REMAINING,
    SUM(CASE
      WHEN SS020_ACTUAL < RE030_ACTUAL + 11 THEN 1
      WHEN SS020_ACTUAL IS NOT NULL AND RE030_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_BEFORE,
    SUM(CASE
      WHEN SS020_ACTUAL = RE030_ACTUAL + 11 THEN 1
      ELSE 0
    END) AS SS020_CURRENT,
    SUM(CASE
      WHEN SS020_ACTUAL > RE030_ACTUAL + 11 THEN 1
      ELSE 0
    END) AS SS020_AFTER,    
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_PAST_FORECAST
      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')  
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }*/
    [WebMethod]
    public static string GetCEN2018LTE1CMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND POE_NAME IN ('2018 + LTE', '2019 + LTE')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    /*[WebMethod]
    public static string GetCEN2018LTE1CMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
   
    -- JI022 --
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(JI022_ACTUAL) AS JI022_OVERALL_REMAINING,
    SUM(CASE
      WHEN JI022_ACTUAL <= SS010_ACTUAL + 11 THEN 1
      WHEN JI022_ACTUAL IS NOT NULL AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_BEFORE,
    SUM(CASE
      WHEN JI022_ACTUAL > SS010_ACTUAL + 11 THEN 1
      ELSE 0
    END) AS JI022_AFTER,
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') >= TO_CHAR(SYSDATE,'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(JI022_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND JI022_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS JI022_PAST_FORECAST,
    
    -- SS007 --
    COUNT(SS007_ACTUAL) AS SS007_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(SS007_ACTUAL) AS SS007_OVERALL_REMAINING,
    SUM(CASE
      WHEN SS007_ACTUAL <= SS010_ACTUAL + 30 THEN 1
      WHEN SS007_ACTUAL IS NOT NULL AND SS010_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_BEFORE,
    SUM(CASE
      WHEN SS007_ACTUAL > SS010_ACTUAL + 30 THEN 1
      ELSE 0
    END) AS SS007_AFTER,
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') >= TO_CHAR(SYSDATE,'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(SS007_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND SS007_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS007_PAST_FORECAST,
    
    -- SS020 --
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    COUNT(ONAIR_FORECAST) - COUNT(SS020_ACTUAL) AS SS020_OVERALL_REMAINING,
    SUM(CASE
      WHEN SS020_ACTUAL <= RE030_ACTUAL + 11 THEN 1
      WHEN SS020_ACTUAL IS NOT NULL AND RE030_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_BEFORE,
    SUM(CASE
      WHEN SS020_ACTUAL > RE030_ACTUAL + 11 THEN 1
      ELSE 0
    END) AS SS020_AFTER,
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') >= TO_CHAR(SYSDATE,'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') = TO_CHAR(SYSDATE,'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_THISMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_NEXTMONTH,
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') > TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_FUTURE_REMAINING,
    SUM(CASE
      WHEN TO_CHAR(SS020_FORECAST,'YYYY-MM') < TO_CHAR(SYSDATE,'YYYY-MM') AND SS020_ACTUAL IS NULL THEN 1
      ELSE 0
    END) AS SS020_PAST_FORECAST
      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    } */
    [WebMethod]
    public static string GetCEN2018LTEACMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE (PONDER.PACE_POE.STATUS = 'Active' OR PONDER.PACE_POE.STATUS = 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')   
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND (MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS')
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCEN20184T4RMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,    
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCEN2018CRANMILE()
    {
        //Construction Started
        string sql = @"SELECT STRATEGIC_DRIVER,
    COUNT(ONAIR_FORECAST) AS POE_2018,    
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND PRODUCT_GROUP IN ('CRAN - Build', 'CRAN - Buy')
  AND PRODUCT_SUBGROUP IN ('LTE1C - Micro Cell', 'LTE1C - Micro Cell Anchor', 'LTE1C - Pico Cell', 'LTE1C - Pico Cell Anchor') 
  AND POE_NAME IN ('2018 + CRAN', '2019 + CRAN')
  AND MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
GROUP BY STRATEGIC_DRIVER
ORDER BY STRATEGIC_DRIVER";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCEN2018BWEHWMILE()
    {
        //Construction Started
        string sql = @"SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY'),
    COUNT(ONAIR_FORECAST) AS POE_2018,    
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY')
ORDER BY TO_CHAR(ONAIR_FORECAST, 'YYYY')";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut11()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND MARKET = 'ARKANSAS/OKLAHOMA'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut12()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND MARKET = 'ILLINOIS/WISCONSIN'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut13()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND MARKET = 'MISSOURI/KANSAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut14()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND MARKET = 'ND/SD/NE/MN/IA'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut15()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND MARKET = 'NORTH TEXAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut16()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND MARKET = 'SOUTH TEXAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetAROK2018NSBMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME IN ('2018 + NSB', '2019 + NSB')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET = 'ARKANSAS/OKLAHOMA'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetILWI2018NSBMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME IN ('2018 + NSB', '2019 + NSB')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET = 'ILLINOIS/WISCONSIN'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetMOKS2018NSBMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME IN ('2018 + NSB', '2019 + NSB')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET = 'MISSOURI/KANSAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetMNP2018NSBMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME IN ('2018 + NSB', '2019 + NSB')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET = 'ND/SD/NE/MN/IA'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetNTX2018NSBMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME IN ('2018 + NSB', '2019 + NSB')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET = 'NORTH TEXAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetSTX2018NSBMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND POE_NAME IN ('2018 + NSB', '2019 + NSB')
  AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
  AND MARKET = 'SOUTH TEXAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCENNBD2018POENSB()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.PRODUCT_GROUP,
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR,
  coalesce(SUM(ONAIR.PROJECTS_FCST_ONAIR) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_FCST_ONAIR,

  coalesce(ONAIRACT.PROJECTS_ONAIR_ACTUAL,0) PROJECTS_ONAIR_ACTUAL,
  coalesce(SUM(ONAIRACT.PROJECTS_ONAIR_ACTUAL) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_ONAIR_ACTUAL,

  coalesce(NBD.PROJECTS_CURRENT_NEED_BY_DATE,0) PROJECTS_CURRENT_NEED_BY_DATE, 
  coalesce(SUM(NBD.PROJECTS_CURRENT_NEED_BY_DATE) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_CURRENT_NBD 

  --coalesce(ONAIRACT.CUM_PROJ_ONAIR_ACTUAL,0) CUM_PROJ_ONAIR_ACTUAL,
  --coalesce(NBD.CUM_PROJ_CURR_NEED_BY_DATE,0) CUM_PROJ_CURR_NEED_BY_DATE
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct 
    case 
      when TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') --if its this year, summary by month
      else TO_CHAR(ONAIR_FORECAST, 'YYYY') --if its not this year, summarize by year
    end as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') in (TO_CHAR(sysdate, 'YYYY'),TO_CHAR(sysdate, 'YYYY')-1,TO_CHAR(sysdate, 'YYYY')+1)) --limit results to previous year, current year and next year
)
 t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct PRODUCT_GROUP
  from PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')  
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
--  select a.*,
--    SUM(PROJECTS_FCST_ONAIR) over (partition by MARKET order by FORECAST_MONTH asc) as CUMULATIVE_PROJECTS_FCST_ONAIR 
--  from(
    SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
    FROM PONDER.PACE_POE
    WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')  
    GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) a
--  where a.market = 'ARKANSAS/OKLAHOMA'
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.PRODUCT_GROUP = ONAIR.PRODUCT_GROUP
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR ACTUAL
--  select b.*,
--    SUM(PROJECTS_ONAIR_ACTUAL) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_ONAIR_ACTUAL
--  from(
  SELECT TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM') AS FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_ONAIR_ACTUAL
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')  
  GROUP BY TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM'), PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) b
) ONAIRACT on t1.FORECAST_MONTH = ONAIRACT.FORECAST_MONTH and t2.PRODUCT_GROUP = ONAIRACT.PRODUCT_GROUP
left join (
  -- count by month up and join to t1 & t2
  -- for NEED BY DATE
--  select c.*,
--    SUM(PROJECTS_CURRENT_NEED_BY_DATE) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_CURR_NEED_BY_DATE 
--  from(
  SELECT FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_CURRENT_NEED_BY_DATE
  FROM(
   SELECT 
      case 
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY-MM') --if its this year, summary by month
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') then TO_CHAR(add_months(sysdate,12), 'YYYY') --if its next year or beyond make it next year plus
        else TO_CHAR(add_months(sysdate, -12), 'YYYY')--if its last year or before make it last year minus
      end as FORECAST_MONTH, PRODUCT_GROUP, PACE_NUMBER
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND(POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND(MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA'
      OR MARKET = 'MISSOURI/KANSAS'
      OR MARKET = 'ARKANSAS/OKLAHOMA'
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS') ) t1
  GROUP BY FORECAST_MONTH, PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) c
) NBD on t1.FORECAST_MONTH = NBD.FORECAST_MONTH and t2.PRODUCT_GROUP = NBD.PRODUCT_GROUP

order by t1.FORECAST_MONTH, t2.PRODUCT_GROUP
";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCENNBD2018POELTE1C()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.PRODUCT_GROUP,
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR,
  coalesce(SUM(ONAIR.PROJECTS_FCST_ONAIR) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_FCST_ONAIR,

  coalesce(ONAIRACT.PROJECTS_ONAIR_ACTUAL,0) PROJECTS_ONAIR_ACTUAL,
  coalesce(SUM(ONAIRACT.PROJECTS_ONAIR_ACTUAL) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_ONAIR_ACTUAL,

  coalesce(NBD.PROJECTS_CURRENT_NEED_BY_DATE,0) PROJECTS_CURRENT_NEED_BY_DATE, 
  coalesce(SUM(NBD.PROJECTS_CURRENT_NEED_BY_DATE) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_CURRENT_NBD 

  --coalesce(ONAIRACT.CUM_PROJ_ONAIR_ACTUAL,0) CUM_PROJ_ONAIR_ACTUAL,
  --coalesce(NBD.CUM_PROJ_CURR_NEED_BY_DATE,0) CUM_PROJ_CURR_NEED_BY_DATE
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct 
    case 
      when TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') --if its this year, summary by month
      else TO_CHAR(ONAIR_FORECAST, 'YYYY') --if its not this year, summarize by year
    end as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') in (TO_CHAR(sysdate, 'YYYY'),TO_CHAR(sysdate, 'YYYY')-1,TO_CHAR(sysdate, 'YYYY')+1)) --limit results to previous year, current year and next year
)
 t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct PRODUCT_GROUP
  from PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
--  select a.*,
--    SUM(PROJECTS_FCST_ONAIR) over (partition by MARKET order by FORECAST_MONTH asc) as CUMULATIVE_PROJECTS_FCST_ONAIR 
--  from(
    SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
    FROM PONDER.PACE_POE
    WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
    GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) a
--  where a.market = 'ARKANSAS/OKLAHOMA'
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.PRODUCT_GROUP = ONAIR.PRODUCT_GROUP
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR ACTUAL
--  select b.*,
--    SUM(PROJECTS_ONAIR_ACTUAL) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_ONAIR_ACTUAL
--  from(
  SELECT TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM') AS FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_ONAIR_ACTUAL
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE' 
  AND (POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  GROUP BY TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM'), PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) b
) ONAIRACT on t1.FORECAST_MONTH = ONAIRACT.FORECAST_MONTH and t2.PRODUCT_GROUP = ONAIRACT.PRODUCT_GROUP
left join (
  -- count by month up and join to t1 & t2
  -- for NEED BY DATE
--  select c.*,
--    SUM(PROJECTS_CURRENT_NEED_BY_DATE) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_CURR_NEED_BY_DATE 
--  from(
  SELECT FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_CURRENT_NEED_BY_DATE
  FROM(
   SELECT 
      case 
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY-MM') --if its this year, summary by month
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') then TO_CHAR(add_months(sysdate,12), 'YYYY') --if its next year or beyond make it next year plus
        else TO_CHAR(add_months(sysdate, -12), 'YYYY')--if its last year or before make it last year minus
      end as FORECAST_MONTH, PRODUCT_GROUP, PACE_NUMBER
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'LTE'
  AND(POE_NAME = '2018 + LTE'
      OR POE_NAME = '2019 + LTE')
  AND(MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA'
      OR MARKET = 'MISSOURI/KANSAS'
      OR MARKET = 'ARKANSAS/OKLAHOMA'
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' ) t1
  GROUP BY FORECAST_MONTH, PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) c
) NBD on t1.FORECAST_MONTH = NBD.FORECAST_MONTH and t2.PRODUCT_GROUP = NBD.PRODUCT_GROUP

order by t1.FORECAST_MONTH, t2.PRODUCT_GROUP
";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCENNBD2018POELTEAC()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.PRODUCT_GROUP,
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR,
  coalesce(SUM(ONAIR.PROJECTS_FCST_ONAIR) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_FCST_ONAIR,

  coalesce(ONAIRACT.PROJECTS_ONAIR_ACTUAL,0) PROJECTS_ONAIR_ACTUAL,
  coalesce(SUM(ONAIRACT.PROJECTS_ONAIR_ACTUAL) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_ONAIR_ACTUAL,

  coalesce(NBD.PROJECTS_CURRENT_NEED_BY_DATE,0) PROJECTS_CURRENT_NEED_BY_DATE, 
  coalesce(SUM(NBD.PROJECTS_CURRENT_NEED_BY_DATE) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_CURRENT_NBD 

  --coalesce(ONAIRACT.CUM_PROJ_ONAIR_ACTUAL,0) CUM_PROJ_ONAIR_ACTUAL,
  --coalesce(NBD.CUM_PROJ_CURR_NEED_BY_DATE,0) CUM_PROJ_CURR_NEED_BY_DATE
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct 
    case 
      when TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') --if its this year, summary by month
      else TO_CHAR(ONAIR_FORECAST, 'YYYY') --if its not this year, summarize by year
    end as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') in (TO_CHAR(sysdate, 'YYYY'),TO_CHAR(sysdate, 'YYYY')-1,TO_CHAR(sysdate, 'YYYY')+1)) --limit results to previous year, current year and next year
)
 t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct PRODUCT_GROUP
  from PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE 2C'
      OR NATIONAL_PROGRAM = 'LTE 3C'
      OR NATIONAL_PROGRAM = 'LTE 4C'
      OR NATIONAL_PROGRAM = 'LTE 5C'
      OR NATIONAL_PROGRAM = 'LTE 6C'
      OR NATIONAL_PROGRAM = 'LTE 7C')    
  AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
--  select a.*,
--    SUM(PROJECTS_FCST_ONAIR) over (partition by MARKET order by FORECAST_MONTH asc) as CUMULATIVE_PROJECTS_FCST_ONAIR 
--  from(
    SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
    FROM PONDER.PACE_POE
    WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE 2C'
      OR NATIONAL_PROGRAM = 'LTE 3C'
      OR NATIONAL_PROGRAM = 'LTE 4C'
      OR NATIONAL_PROGRAM = 'LTE 5C'
      OR NATIONAL_PROGRAM = 'LTE 6C'
      OR NATIONAL_PROGRAM = 'LTE 7C')    
  AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
    GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) a
--  where a.market = 'ARKANSAS/OKLAHOMA'
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.PRODUCT_GROUP = ONAIR.PRODUCT_GROUP
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR ACTUAL
--  select b.*,
--    SUM(PROJECTS_ONAIR_ACTUAL) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_ONAIR_ACTUAL
--  from(
  SELECT TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM') AS FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_ONAIR_ACTUAL
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE 2C'
      OR NATIONAL_PROGRAM = 'LTE 3C'
      OR NATIONAL_PROGRAM = 'LTE 4C'
      OR NATIONAL_PROGRAM = 'LTE 5C'
      OR NATIONAL_PROGRAM = 'LTE 6C'
      OR NATIONAL_PROGRAM = 'LTE 7C')    
  AND (POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  GROUP BY TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM'), PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) b
) ONAIRACT on t1.FORECAST_MONTH = ONAIRACT.FORECAST_MONTH and t2.PRODUCT_GROUP = ONAIRACT.PRODUCT_GROUP
left join (
  -- count by month up and join to t1 & t2
  -- for NEED BY DATE
--  select c.*,
--    SUM(PROJECTS_CURRENT_NEED_BY_DATE) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_CURR_NEED_BY_DATE 
--  from(
  SELECT FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_CURRENT_NEED_BY_DATE
  FROM(
   SELECT 
      case 
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY-MM') --if its this year, summary by month
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') then TO_CHAR(add_months(sysdate,12), 'YYYY') --if its next year or beyond make it next year plus
        else TO_CHAR(add_months(sysdate, -12), 'YYYY')--if its last year or before make it last year minus
      end as FORECAST_MONTH, PRODUCT_GROUP, PACE_NUMBER
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND(NATIONAL_PROGRAM = 'LTE 2C'
      OR NATIONAL_PROGRAM = 'LTE 3C'
      OR NATIONAL_PROGRAM = 'LTE 4C'
      OR NATIONAL_PROGRAM = 'LTE 5C'
      OR NATIONAL_PROGRAM = 'LTE 6C'
      OR NATIONAL_PROGRAM = 'LTE 7C')
  AND(POE_NAME = '2018 + LTE 2C' OR POE_NAME = '2019 + LTE 2C' OR POE_NAME = '2017 + LTE 2C'
      OR POE_NAME = '2018 + LTE 3C' OR POE_NAME = '2019 + LTE 3C' OR POE_NAME = '2017 + LTE 3C'
      OR POE_NAME = '2018 + LTE 4C' OR POE_NAME = '2019 + LTE 4C' OR POE_NAME = '2017 + LTE 4C'
      OR POE_NAME = '2018 + LTE 5C' OR POE_NAME = '2019 + LTE 5C' OR POE_NAME = '2017 + LTE 5C'
      OR POE_NAME = '2018 + LTE 6C' OR POE_NAME = '2019 + LTE 6C' OR POE_NAME = '2017 + LTE 6C'
      OR POE_NAME = '2018 + LTE 7C' OR POE_NAME = '2019 + LTE 7C' OR POE_NAME = '2017 + LTE 7C')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  AND(MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA'
      OR MARKET = 'MISSOURI/KANSAS'
      OR MARKET = 'ARKANSAS/OKLAHOMA'
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS') ) t1
  GROUP BY FORECAST_MONTH, PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) c
) NBD on t1.FORECAST_MONTH = NBD.FORECAST_MONTH and t2.PRODUCT_GROUP = NBD.PRODUCT_GROUP

order by t1.FORECAST_MONTH, t2.PRODUCT_GROUP
";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCENNBD2018POE4T4R()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.PRODUCT_GROUP,
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR,
  coalesce(SUM(ONAIR.PROJECTS_FCST_ONAIR) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_FCST_ONAIR,

  coalesce(ONAIRACT.PROJECTS_ONAIR_ACTUAL,0) PROJECTS_ONAIR_ACTUAL,
  coalesce(SUM(ONAIRACT.PROJECTS_ONAIR_ACTUAL) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_ONAIR_ACTUAL,

  coalesce(NBD.PROJECTS_CURRENT_NEED_BY_DATE,0) PROJECTS_CURRENT_NEED_BY_DATE, 
  coalesce(SUM(NBD.PROJECTS_CURRENT_NEED_BY_DATE) over (partition by t2.PRODUCT_GROUP order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_CURRENT_NBD 

  --coalesce(ONAIRACT.CUM_PROJ_ONAIR_ACTUAL,0) CUM_PROJ_ONAIR_ACTUAL,
  --coalesce(NBD.CUM_PROJ_CURR_NEED_BY_DATE,0) CUM_PROJ_CURR_NEED_BY_DATE
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct 
    case 
      when TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') --if its this year, summary by month
      else TO_CHAR(ONAIR_FORECAST, 'YYYY') --if its not this year, summarize by year
    end as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') in (TO_CHAR(sysdate, 'YYYY'),TO_CHAR(sysdate, 'YYYY')-1,TO_CHAR(sysdate, 'YYYY')+1)) --limit results to previous year, current year and next year
)
 t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct PRODUCT_GROUP
  from PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
--  select a.*,
--    SUM(PROJECTS_FCST_ONAIR) over (partition by MARKET order by FORECAST_MONTH asc) as CUMULATIVE_PROJECTS_FCST_ONAIR 
--  from(
    SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
    FROM PONDER.PACE_POE
    WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
    GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) a
--  where a.market = 'ARKANSAS/OKLAHOMA'
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.PRODUCT_GROUP = ONAIR.PRODUCT_GROUP
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR ACTUAL
--  select b.*,
--    SUM(PROJECTS_ONAIR_ACTUAL) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_ONAIR_ACTUAL
--  from(
  SELECT TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM') AS FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_ONAIR_ACTUAL
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  GROUP BY TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM'), PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) b
) ONAIRACT on t1.FORECAST_MONTH = ONAIRACT.FORECAST_MONTH and t2.PRODUCT_GROUP = ONAIRACT.PRODUCT_GROUP
left join (
  -- count by month up and join to t1 & t2
  -- for NEED BY DATE
--  select c.*,
--    SUM(PROJECTS_CURRENT_NEED_BY_DATE) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_CURR_NEED_BY_DATE 
--  from(
  SELECT FORECAST_MONTH, PRODUCT_GROUP, COUNT(PACE_NUMBER) AS PROJECTS_CURRENT_NEED_BY_DATE
  FROM(
   SELECT 
      case 
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY-MM') --if its this year, summary by month
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') then TO_CHAR(add_months(sysdate,12), 'YYYY') --if its next year or beyond make it next year plus
        else TO_CHAR(add_months(sysdate, -12), 'YYYY')--if its last year or before make it last year minus
      end as FORECAST_MONTH, PRODUCT_GROUP, PACE_NUMBER
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'Antenna Modifications'
  AND PRODUCT_GROUP = 'Antenna Modifications'
  AND PRODUCT_SUBGROUP = '4TXRX Antenna Retrofit'
  AND POE_NAME = 'CE + Antenna Modifications'
  AND(MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA'
      OR MARKET = 'MISSOURI/KANSAS'
      OR MARKET = 'ARKANSAS/OKLAHOMA'
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
  GROUP BY FORECAST_MONTH, PRODUCT_GROUP
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) c
) NBD on t1.FORECAST_MONTH = NBD.FORECAST_MONTH and t2.PRODUCT_GROUP = NBD.PRODUCT_GROUP

order by t1.FORECAST_MONTH, t2.PRODUCT_GROUP
";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetPOE2018CRANDRILL()
    {
        string sql = @"SELECT PONDER.PACE_POE.USID, PONDER.PACE_POE.PACE_NUMBER, PONDER.PLAN_BASE.JOB_NUMBER, PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PACE_POE.PRODUCT_SUBGROUP,
  TO_CHAR(PONDER.PACE_POE.RE020_ACTUAL, 'MM-DD-YYYY') AS RE020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI025_ACTUAL, 'MM-DD-YYYY') AS CI025_ACTUAL, 
  TO_CHAR(PONDER.PACE_POE.CI020_ACTUAL, 'MM-DD-YYYY') AS CI020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI050_ACTUAL, 'MM-DD-YYYY') AS CI050_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_ACTUAL, 'MM-DD-YYYY') AS ONAIR_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_FORECAST, 'MM-DD-YYYY') AS ONAIR_FORECAST
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE (PONDER.PACE_POE.STATUS = 'Active' OR PONDER.PACE_POE.STATUS = 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM = 'CRAN'
  AND (PONDER.PACE_POE.PRODUCT_GROUP = 'CRAN - Build' OR PONDER.PACE_POE.PRODUCT_GROUP = 'CRAN - Buy')
  AND (PONDER.PACE_POE.PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PONDER.PACE_POE.PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PONDER.PACE_POE.PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PONDER.PACE_POE.PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (PONDER.PACE_POE.POE_NAME = '2018 + CRAN' OR PONDER.PACE_POE.POE_NAME = '2019 + CRAN')
  AND (PONDER.PACE_POE.MARKET = 'ILLINOIS/WISCONSIN'
      OR PONDER.PACE_POE.MARKET = 'ND/SD/NE/MN/IA' 
      OR PONDER.PACE_POE.MARKET = 'MISSOURI/KANSAS' 
      OR PONDER.PACE_POE.MARKET = 'ARKANSAS/OKLAHOMA' 
      OR PONDER.PACE_POE.MARKET = 'NORTH TEXAS'
      OR PONDER.PACE_POE.MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
ORDER BY PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PACE_NUMBER
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018BWEHWDRILL()
    {
        string sql = @"SELECT PONDER.PACE_POE.USID, PONDER.PACE_POE.PACE_NUMBER, PONDER.PLAN_BASE.JOB_NUMBER, PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PACE_POE.PRODUCT_SUBGROUP,
  TO_CHAR(PONDER.PACE_POE.RE020_ACTUAL, 'MM-DD-YYYY') AS RE020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI025_ACTUAL, 'MM-DD-YYYY') AS CI025_ACTUAL, 
  TO_CHAR(PONDER.PACE_POE.CI020_ACTUAL, 'MM-DD-YYYY') AS CI020_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.CI050_ACTUAL, 'MM-DD-YYYY') AS CI050_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_ACTUAL, 'MM-DD-YYYY') AS ONAIR_ACTUAL,
  TO_CHAR(PONDER.PACE_POE.ONAIR_FORECAST, 'MM-DD-YYYY') AS ONAIR_FORECAST
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE (PONDER.PACE_POE.STATUS = 'Active' OR PONDER.PACE_POE.STATUS = 'Complete')
  AND (PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE Additional Radio' OR PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR PONDER.PACE_POE.NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PONDER.PACE_POE.PRODUCT_GROUP = 'LTE Additional Radio' OR PONDER.PACE_POE.PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PONDER.PACE_POE.PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PONDER.PACE_POE.PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (PONDER.PACE_POE.POE_NAME = '2018 + LTE Additional Radio' OR PONDER.PACE_POE.POE_NAME = '2018 + LTE Extended Carrier'
      OR PONDER.PACE_POE.POE_NAME = '2018 + LTE Multi Carrier' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE Additional Radio' 
      OR PONDER.PACE_POE.POE_NAME = '2019 + LTE Extended Carrier' OR PONDER.PACE_POE.POE_NAME = '2019 + LTE Multi Carrier')
  AND (PONDER.PACE_POE.MARKET = 'ILLINOIS/WISCONSIN'
      OR PONDER.PACE_POE.MARKET = 'ND/SD/NE/MN/IA' 
      OR PONDER.PACE_POE.MARKET = 'MISSOURI/KANSAS' 
      OR PONDER.PACE_POE.MARKET = 'ARKANSAS/OKLAHOMA' 
      OR PONDER.PACE_POE.MARKET = 'NORTH TEXAS'
      OR PONDER.PACE_POE.MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
ORDER BY PONDER.PACE_POE.MARKET, PONDER.PACE_POE.PACE_NUMBER
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetCENNBD2018POECRAN()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.NATIONAL_PROGRAM,
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR,
  coalesce(SUM(ONAIR.PROJECTS_FCST_ONAIR) over (partition by t2.NATIONAL_PROGRAM order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_FCST_ONAIR,

  coalesce(ONAIRACT.PROJECTS_ONAIR_ACTUAL,0) PROJECTS_ONAIR_ACTUAL,
  coalesce(SUM(ONAIRACT.PROJECTS_ONAIR_ACTUAL) over (partition by t2.NATIONAL_PROGRAM order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_ONAIR_ACTUAL,

  coalesce(NBD.PROJECTS_CURRENT_NEED_BY_DATE,0) PROJECTS_CURRENT_NEED_BY_DATE, 
  coalesce(SUM(NBD.PROJECTS_CURRENT_NEED_BY_DATE) over (partition by t2.NATIONAL_PROGRAM order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_CURRENT_NBD 

  --coalesce(ONAIRACT.CUM_PROJ_ONAIR_ACTUAL,0) CUM_PROJ_ONAIR_ACTUAL,
  --coalesce(NBD.CUM_PROJ_CURR_NEED_BY_DATE,0) CUM_PROJ_CURR_NEED_BY_DATE
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct 
    case 
      when TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') --if its this year, summary by month
      else TO_CHAR(ONAIR_FORECAST, 'YYYY') --if its not this year, summarize by year
    end as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') in (TO_CHAR(sysdate, 'YYYY'),TO_CHAR(sysdate, 'YYYY')-1,TO_CHAR(sysdate, 'YYYY')+1)) --limit results to previous year, current year and next year
)
 t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct NATIONAL_PROGRAM
  from PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
--  select a.*,
--    SUM(PROJECTS_FCST_ONAIR) over (partition by MARKET order by FORECAST_MONTH asc) as CUMULATIVE_PROJECTS_FCST_ONAIR 
--  from(
    SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, NATIONAL_PROGRAM, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
    FROM PONDER.PACE_POE
    WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
    GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), NATIONAL_PROGRAM
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) a
--  where a.market = 'ARKANSAS/OKLAHOMA'
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.NATIONAL_PROGRAM = ONAIR.NATIONAL_PROGRAM
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR ACTUAL
--  select b.*,
--    SUM(PROJECTS_ONAIR_ACTUAL) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_ONAIR_ACTUAL
--  from(
  SELECT TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM') AS FORECAST_MONTH, NATIONAL_PROGRAM, COUNT(PACE_NUMBER) AS PROJECTS_ONAIR_ACTUAL
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  GROUP BY TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM'), NATIONAL_PROGRAM
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) b
) ONAIRACT on t1.FORECAST_MONTH = ONAIRACT.FORECAST_MONTH and t2.NATIONAL_PROGRAM = ONAIRACT.NATIONAL_PROGRAM
left join (
  -- count by month up and join to t1 & t2
  -- for NEED BY DATE
--  select c.*,
--    SUM(PROJECTS_CURRENT_NEED_BY_DATE) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_CURR_NEED_BY_DATE 
--  from(
  SELECT FORECAST_MONTH, NATIONAL_PROGRAM, COUNT(PACE_NUMBER) AS PROJECTS_CURRENT_NEED_BY_DATE
  FROM(
   SELECT 
      case 
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY-MM') --if its this year, summary by month
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') then TO_CHAR(add_months(sysdate,12), 'YYYY') --if its next year or beyond make it next year plus
        else TO_CHAR(add_months(sysdate, -12), 'YYYY')--if its last year or before make it last year minus
      end as FORECAST_MONTH, NATIONAL_PROGRAM, PACE_NUMBER
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND(PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND(PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor')
  AND(POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND(MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA'
      OR MARKET = 'MISSOURI/KANSAS'
      OR MARKET = 'ARKANSAS/OKLAHOMA'
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
  GROUP BY FORECAST_MONTH, NATIONAL_PROGRAM
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) c
) NBD on t1.FORECAST_MONTH = NBD.FORECAST_MONTH and t2.NATIONAL_PROGRAM = NBD.NATIONAL_PROGRAM

order by t1.FORECAST_MONTH, t2.NATIONAL_PROGRAM
";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetCENNBD2018POEBWEHW()
    {
        //Construction Started
        string sql = @"select 
  t1.FORECAST_MONTH,
  t2.JOB_TYPE_SUBTYPE,
  coalesce(ONAIR.PROJECTS_FCST_ONAIR,0) PROJECTS_FCST_ONAIR,
  coalesce(SUM(ONAIR.PROJECTS_FCST_ONAIR) over (partition by t2.JOB_TYPE_SUBTYPE order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_FCST_ONAIR,

  coalesce(ONAIRACT.PROJECTS_ONAIR_ACTUAL,0) PROJECTS_ONAIR_ACTUAL,
  coalesce(SUM(ONAIRACT.PROJECTS_ONAIR_ACTUAL) over (partition by t2.JOB_TYPE_SUBTYPE order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_ONAIR_ACTUAL,

  coalesce(NBD.PROJECTS_CURRENT_NEED_BY_DATE,0) PROJECTS_CURRENT_NEED_BY_DATE, 
  coalesce(SUM(NBD.PROJECTS_CURRENT_NEED_BY_DATE) over (partition by t2.JOB_TYPE_SUBTYPE order by t1.FORECAST_MONTH asc),0) as CUMU_PROJECTS_CURRENT_NBD 

  --coalesce(ONAIRACT.CUM_PROJ_ONAIR_ACTUAL,0) CUM_PROJ_ONAIR_ACTUAL,
  --coalesce(NBD.CUM_PROJ_CURR_NEED_BY_DATE,0) CUM_PROJ_CURR_NEED_BY_DATE
from (
  -- build the table of dates you want to consider, this using a rolling window so it will turn over on Jan 1 of next year
  select distinct 
    case 
      when TO_CHAR(ONAIR_FORECAST, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') --if its this year, summary by month
      else TO_CHAR(ONAIR_FORECAST, 'YYYY') --if its not this year, summarize by year
    end as FORECAST_MONTH
  from PONDER.PACE_POE
  where onair_forecast is not null
    and (TO_CHAR(ONAIR_FORECAST, 'YYYY') in (TO_CHAR(sysdate, 'YYYY'),TO_CHAR(sysdate, 'YYYY')-1,TO_CHAR(sysdate, 'YYYY')+1)) --limit results to previous year, current year and next year
)
 t1 
cross join (
  -- build the table of all the markets you want to consider and cross join so each market is assigned to each 'YYYY-MM' in the table t1
  select distinct JOB_TYPE_SUBTYPE
  from PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
) t2
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR
--  select a.*,
--    SUM(PROJECTS_FCST_ONAIR) over (partition by MARKET order by FORECAST_MONTH asc) as CUMULATIVE_PROJECTS_FCST_ONAIR 
--  from(
    SELECT TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') AS FORECAST_MONTH, JOB_TYPE_SUBTYPE, COUNT(PACE_NUMBER) AS PROJECTS_FCST_ONAIR
    FROM PONDER.PACE_POE
    WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
    GROUP BY TO_CHAR(ONAIR_FORECAST, 'YYYY-MM'), JOB_TYPE_SUBTYPE
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) a
--  where a.market = 'ARKANSAS/OKLAHOMA'
) ONAIR on t1.FORECAST_MONTH = ONAIR.FORECAST_MONTH and t2.JOB_TYPE_SUBTYPE = ONAIR.JOB_TYPE_SUBTYPE
left join (
  -- count by month up and join to t1 & t2
  -- for ONAIR ACTUAL
--  select b.*,
--    SUM(PROJECTS_ONAIR_ACTUAL) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_ONAIR_ACTUAL
--  from(
  SELECT TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM') AS FORECAST_MONTH, JOB_TYPE_SUBTYPE, COUNT(PACE_NUMBER) AS PROJECTS_ONAIR_ACTUAL
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA' 
      OR MARKET = 'MISSOURI/KANSAS' 
      OR MARKET = 'ARKANSAS/OKLAHOMA' 
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
  GROUP BY TO_CHAR(ONAIR_ACTUAL, 'YYYY-MM'), JOB_TYPE_SUBTYPE
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) b
) ONAIRACT on t1.FORECAST_MONTH = ONAIRACT.FORECAST_MONTH and t2.JOB_TYPE_SUBTYPE = ONAIRACT.JOB_TYPE_SUBTYPE
left join (
  -- count by month up and join to t1 & t2
  -- for NEED BY DATE
--  select c.*,
--    SUM(PROJECTS_CURRENT_NEED_BY_DATE) over (partition by MARKET order by FORECAST_MONTH asc) as CUM_PROJ_CURR_NEED_BY_DATE 
--  from(
  SELECT FORECAST_MONTH, JOB_TYPE_SUBTYPE, COUNT(PACE_NUMBER) AS PROJECTS_CURRENT_NEED_BY_DATE
  FROM(
   SELECT 
      case 
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = TO_CHAR(sysdate, 'YYYY') then TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY-MM') --if its this year, summary by month
        when TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') then TO_CHAR(add_months(sysdate,12), 'YYYY') --if its next year or beyond make it next year plus
        else TO_CHAR(add_months(sysdate, -12), 'YYYY')--if its last year or before make it last year minus
      end as FORECAST_MONTH, JOB_TYPE_SUBTYPE, PACE_NUMBER
  FROM PONDER.PACE_POE
  WHERE STATUS IN ('Active', 'Complete')
  AND(NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier'
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND(PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP<> 'Software Carrier'
  AND(POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio'
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND(MARKET = 'ILLINOIS/WISCONSIN'
      OR MARKET = 'ND/SD/NE/MN/IA'
      OR MARKET = 'MISSOURI/KANSAS'
      OR MARKET = 'ARKANSAS/OKLAHOMA'
      OR MARKET = 'NORTH TEXAS'
      OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
  GROUP BY FORECAST_MONTH, JOB_TYPE_SUBTYPE
  --ORDER BY TO_DATE(FORECAST_MONTH, 'YYYY-MM')
--  ) c
) NBD on t1.FORECAST_MONTH = NBD.FORECAST_MONTH and t2.JOB_TYPE_SUBTYPE = NBD.JOB_TYPE_SUBTYPE

order by t1.FORECAST_MONTH, t2.JOB_TYPE_SUBTYPE
";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetPOE2018CRANryg()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(PACE_NUMBER) AS YTD_COMPLETE 
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND POE_NAME = '2018 + CRAN'
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor')  
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018CRANrygCUMU()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,    
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND POE_NAME = '2018 + CRAN'
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + CRAN')  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'  THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') AND (POE_NAME = '2018 + CRAN') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_CUMU
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor')   
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'CRAN'
  AND (PRODUCT_GROUP = 'CRAN - Build' OR PRODUCT_GROUP = 'CRAN - Buy')
  AND (PRODUCT_SUBGROUP = 'LTE1C - Micro Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Micro Cell Anchor'
      OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell' OR PRODUCT_SUBGROUP = 'LTE1C - Pico Cell Anchor') 
  AND (POE_NAME = '2018 + CRAN' OR POE_NAME = '2019 + CRAN')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018BWEHWryg()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(PACE_NUMBER) AS YTD_COMPLETE 
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'  
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' THEN PACE_NUMBER END) AS JAN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018' THEN PACE_NUMBER END) AS FEB_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' THEN PACE_NUMBER END) AS MAR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018' THEN PACE_NUMBER END) AS APR_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' THEN PACE_NUMBER END) AS MAY_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' THEN PACE_NUMBER END) AS JUN_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' THEN PACE_NUMBER END) AS JUL_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' THEN PACE_NUMBER END) AS AUG_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' THEN PACE_NUMBER END) AS SEP_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' THEN PACE_NUMBER END) AS OCT_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' THEN PACE_NUMBER END) AS NOV_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018' THEN PACE_NUMBER END) AS DEC_COMPLETE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') > TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetPOE2018BWEHWrygCUMU()
    {
        string sql = @"SELECT 'NBD' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '01-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '03-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '05-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '07-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '09-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '11-2018' OR TO_CHAR(CURRENT_NEED_BY_DATE, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(CURRENT_NEED_BY_DATE, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Forecast' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,    
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE    
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
UNION ALL
SELECT 'Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018'
UNION ALL
SELECT 'FCST vs Plan' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier')  AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_FORECAST, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_FORECAST, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_PLAN, 'MM-YYYY') = '12-2018'
      OR TO_CHAR(ONAIR_PLAN, 'YYYY') > TO_CHAR(sysdate, 'YYYY')) AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier') AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018' THEN PACE_NUMBER END) -
    COUNT(CASE WHEN (TO_CHAR(ONAIR_PLAN, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018') AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier' OR POE_NAME = '2018 + LTE Multi Carrier') AND TO_CHAR(ONAIR_PLAN, 'YYYY') = '2018' THEN PACE_NUMBER END) AS YTD_CUMU
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'  
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
UNION ALL
SELECT 'Actual' as PROJECT,
    COUNT(CASE WHEN TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') THEN PACE_NUMBER END) AS BEFORE_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018') THEN PACE_NUMBER END) AS JAN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018') THEN PACE_NUMBER END) AS FEB_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018') THEN PACE_NUMBER END) AS MAR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018') THEN PACE_NUMBER END) AS APR_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018') THEN PACE_NUMBER END) AS MAY_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018') THEN PACE_NUMBER END) AS JUN_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018') THEN PACE_NUMBER END) AS JUL_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018') THEN PACE_NUMBER END) AS AUG_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018') THEN PACE_NUMBER END) AS SEP_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018') THEN PACE_NUMBER END) AS OCT_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018') THEN PACE_NUMBER END) AS NOV_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') < TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS DEC_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '01-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '02-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '03-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '04-2018'
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '05-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '06-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '07-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '08-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '09-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '10-2018' 
      OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '11-2018' OR TO_CHAR(ONAIR_ACTUAL, 'MM-YYYY') = '12-2018') THEN PACE_NUMBER END) AS AFTER_CUMU,
    COUNT(CASE WHEN (TO_CHAR(ONAIR_ACTUAL, 'YYYY') <> TO_CHAR(sysdate, 'YYYY') OR TO_CHAR(ONAIR_ACTUAL, 'YYYY') = '2018') THEN PACE_NUMBER END) AS YTD_COMPLETE      
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND (NATIONAL_PROGRAM = 'LTE Additional Radio' OR NATIONAL_PROGRAM = 'LTE Extended Carrier' 
      OR NATIONAL_PROGRAM = 'LTE Multi Carrier')
  AND (PRODUCT_GROUP = 'LTE Additional Radio' OR PRODUCT_GROUP = 'LTE Extended Carrier'   
      OR PRODUCT_GROUP = 'LTE Multi Carrier')
  AND PRODUCT_SUBGROUP <> 'Software Carrier'
  AND (POE_NAME = '2018 + LTE Additional Radio' OR POE_NAME = '2018 + LTE Extended Carrier'
      OR POE_NAME = '2018 + LTE Multi Carrier' OR POE_NAME = '2019 + LTE Additional Radio' 
      OR POE_NAME = '2019 + LTE Extended Carrier' OR POE_NAME = '2019 + LTE Multi Carrier')
  AND ((MARKET = 'ILLINOIS/WISCONSIN' OR MARKET = 'ND/SD/NE/MN/IA' OR MARKET = 'MISSOURI/KANSAS' OR MARKET = 'ARKANSAS/OKLAHOMA' OR MARKET = 'NORTH TEXAS' OR MARKET = 'SOUTH TEXAS'))
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
"; //store your sql query in this string variable "sql"

        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string Getdonut1_Drilldown()
    {
        string sql = @"SELECT 
t1.MOD_CODE, t1.PRODUCT_GROUP,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.REMAINING,0) REMAINING,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.BNBD_PERCCOMP,0) BNBD_PERCCOMP,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.W90NBD_PERCCOMP,0) W90NBD_PERCCOMP,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.A90NBD_PERCCOMP,0) A90NBD_PERCCOMP,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.REMAINFORECAST,0) REMAINFORECAST
FROM (SELECT DISTINCT MOD_CODE, PRODUCT_GROUP
        FROM PONDER.PACE_POE
        WHERE STATUS IN ('Active', 'Complete')
          AND NATIONAL_PROGRAM = 'NSB'
          AND PRODUCT_GROUP = 'New Site'
          AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
          AND (MARKET = 'ILLINOIS/WISCONSIN'
            OR MARKET = 'ND/SD/NE/MN/IA' 
            OR MARKET = 'MISSOURI/KANSAS' 
            OR MARKET = 'ARKANSAS/OKLAHOMA' 
            OR MARKET = 'NORTH TEXAS'
            OR MARKET = 'SOUTH TEXAS')
          AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
LEFT JOIN (
SELECT MOD_CODE, PRODUCT_GROUP, COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL) AS YTD_COMPLETE,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) AS REMAINING,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                )THEN 1 ELSE 0
             END)
             AS LASTMONTHCOMP,          
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,          
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS BNBD_PERCCOMP,             
          SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END)
             AS WITHIN90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS W90NBD_PERCCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 
                THEN 1 ELSE 0
             END)
             AS AFTER90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS A90NBD_PERCCOMP,
          SUM (CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS NEXTMONTH,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) - SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)
- SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)AS REMAINFORECAST
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN'
            OR MARKET = 'ND/SD/NE/MN/IA' 
            OR MARKET = 'MISSOURI/KANSAS' 
            OR MARKET = 'ARKANSAS/OKLAHOMA' 
            OR MARKET = 'NORTH TEXAS'
            OR MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY MOD_CODE, PRODUCT_GROUP)
t2 on t1.MOD_CODE = t2.MOD_CODE
ORDER BY t1.MOD_CODE
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string Getdonut3_Drilldown()
    {
        string sql = @"SELECT BLOCK_BAND, PRODUCT_GROUP, FREQ_BLOCK,
COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
SUM(CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,
SUM(CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90) THEN 1 ELSE 0 END) AS WITHIN90NBD,
SUM(CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1 ELSE 0 END) AS AFTER90NBD, 
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS CURRENTMONTH,  
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS NEXTMONTH,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS LASTMONTHCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP 
FROM
(SELECT
SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND,
PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PLAN_BASE.SPECTRUM, PONDER.PACE_POE.ONAIR_FORECAST, PONDER.PACE_POE.ONAIR_ACTUAL, PONDER.PACE_POE.CURRENT_NEED_BY_DATE
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND (PONDER.PACE_POE.MARKET = 'ILLINOIS/WISCONSIN'
      OR PONDER.PACE_POE.MARKET = 'ND/SD/NE/MN/IA' 
      OR PONDER.PACE_POE.MARKET = 'MISSOURI/KANSAS' 
      OR PONDER.PACE_POE.MARKET = 'ARKANSAS/OKLAHOMA' 
      OR PONDER.PACE_POE.MARKET = 'NORTH TEXAS'
      OR PONDER.PACE_POE.MARKET = 'SOUTH TEXAS')) 
GROUP BY PRODUCT_GROUP, FREQ_BLOCK, BLOCK_BAND
ORDER BY FREQ_BLOCK
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetNSB_breakdown_AROK()
    {
        string sql = @"SELECT 
t1.MOD_CODE, t1.PRODUCT_GROUP,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.REMAINING,0) REMAINING,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.BNBD_PERCCOMP,0) BNBD_PERCCOMP,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.W90NBD_PERCCOMP,0) W90NBD_PERCCOMP,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.A90NBD_PERCCOMP,0) A90NBD_PERCCOMP,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.REMAINFORECAST,0) REMAINFORECAST
FROM (SELECT DISTINCT MOD_CODE, PRODUCT_GROUP
        FROM PONDER.PACE_POE
        WHERE STATUS IN ('Active', 'Complete')
          AND NATIONAL_PROGRAM = 'NSB'
          AND PRODUCT_GROUP = 'New Site'
          AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
          AND (MARKET = 'ILLINOIS/WISCONSIN'
            OR MARKET = 'ND/SD/NE/MN/IA' 
            OR MARKET = 'MISSOURI/KANSAS' 
            OR MARKET = 'ARKANSAS/OKLAHOMA' 
            OR MARKET = 'NORTH TEXAS'
            OR MARKET = 'SOUTH TEXAS')
          AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
LEFT JOIN (
SELECT MOD_CODE, PRODUCT_GROUP, COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL) AS YTD_COMPLETE,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) AS REMAINING,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                )THEN 1 ELSE 0
             END)
             AS LASTMONTHCOMP,          
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,          
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS BNBD_PERCCOMP,             
          SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END)
             AS WITHIN90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS W90NBD_PERCCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 
                THEN 1 ELSE 0
             END)
             AS AFTER90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS A90NBD_PERCCOMP,
          SUM (CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS NEXTMONTH,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) - SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)
- SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)AS REMAINFORECAST
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ARKANSAS/OKLAHOMA')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY MOD_CODE, PRODUCT_GROUP)
t2 on t1.MOD_CODE = t2.MOD_CODE
ORDER BY t1.MOD_CODE
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetNSB_breakdown_ILWI()
    {
        string sql = @"SELECT 
t1.MOD_CODE, t1.PRODUCT_GROUP,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.REMAINING,0) REMAINING,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.BNBD_PERCCOMP,0) BNBD_PERCCOMP,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.W90NBD_PERCCOMP,0) W90NBD_PERCCOMP,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.A90NBD_PERCCOMP,0) A90NBD_PERCCOMP,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.REMAINFORECAST,0) REMAINFORECAST
FROM (SELECT DISTINCT MOD_CODE, PRODUCT_GROUP
        FROM PONDER.PACE_POE
        WHERE STATUS IN ('Active', 'Complete')
          AND NATIONAL_PROGRAM = 'NSB'
          AND PRODUCT_GROUP = 'New Site'
          AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
          AND (MARKET = 'ILLINOIS/WISCONSIN'
            OR MARKET = 'ND/SD/NE/MN/IA' 
            OR MARKET = 'MISSOURI/KANSAS' 
            OR MARKET = 'ARKANSAS/OKLAHOMA' 
            OR MARKET = 'NORTH TEXAS'
            OR MARKET = 'SOUTH TEXAS')
          AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
LEFT JOIN (
SELECT MOD_CODE, PRODUCT_GROUP, COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL) AS YTD_COMPLETE,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) AS REMAINING,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                )THEN 1 ELSE 0
             END)
             AS LASTMONTHCOMP,          
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,          
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS BNBD_PERCCOMP,             
          SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END)
             AS WITHIN90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS W90NBD_PERCCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 
                THEN 1 ELSE 0
             END)
             AS AFTER90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS A90NBD_PERCCOMP,
          SUM (CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS NEXTMONTH,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) - SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)
- SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)AS REMAINFORECAST
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ILLINOIS/WISCONSIN')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY MOD_CODE, PRODUCT_GROUP)
t2 on t1.MOD_CODE = t2.MOD_CODE
ORDER BY t1.MOD_CODE
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetNSB_breakdown_MOKS()
    {
        string sql = @"SELECT 
t1.MOD_CODE, t1.PRODUCT_GROUP,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.REMAINING,0) REMAINING,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.BNBD_PERCCOMP,0) BNBD_PERCCOMP,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.W90NBD_PERCCOMP,0) W90NBD_PERCCOMP,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.A90NBD_PERCCOMP,0) A90NBD_PERCCOMP,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.REMAINFORECAST,0) REMAINFORECAST
FROM (SELECT DISTINCT MOD_CODE, PRODUCT_GROUP
        FROM PONDER.PACE_POE
        WHERE STATUS IN ('Active', 'Complete')
          AND NATIONAL_PROGRAM = 'NSB'
          AND PRODUCT_GROUP = 'New Site'
          AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
          AND (MARKET = 'ILLINOIS/WISCONSIN'
            OR MARKET = 'ND/SD/NE/MN/IA' 
            OR MARKET = 'MISSOURI/KANSAS' 
            OR MARKET = 'ARKANSAS/OKLAHOMA' 
            OR MARKET = 'NORTH TEXAS'
            OR MARKET = 'SOUTH TEXAS')
          AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
LEFT JOIN (
SELECT MOD_CODE, PRODUCT_GROUP, COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL) AS YTD_COMPLETE,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) AS REMAINING,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                )THEN 1 ELSE 0
             END)
             AS LASTMONTHCOMP,          
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,          
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS BNBD_PERCCOMP,             
          SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END)
             AS WITHIN90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS W90NBD_PERCCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 
                THEN 1 ELSE 0
             END)
             AS AFTER90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS A90NBD_PERCCOMP,
          SUM (CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS NEXTMONTH,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) - SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)
- SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)AS REMAINFORECAST
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'MISSOURI/KANSAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY MOD_CODE, PRODUCT_GROUP)
t2 on t1.MOD_CODE = t2.MOD_CODE
ORDER BY t1.MOD_CODE
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetNSB_breakdown_MNP()
    {
        string sql = @"SELECT 
t1.MOD_CODE, t1.PRODUCT_GROUP,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.REMAINING,0) REMAINING,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.BNBD_PERCCOMP,0) BNBD_PERCCOMP,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.W90NBD_PERCCOMP,0) W90NBD_PERCCOMP,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.A90NBD_PERCCOMP,0) A90NBD_PERCCOMP,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.REMAINFORECAST,0) REMAINFORECAST
FROM (SELECT DISTINCT MOD_CODE, PRODUCT_GROUP
        FROM PONDER.PACE_POE
        WHERE STATUS IN ('Active', 'Complete')
          AND NATIONAL_PROGRAM = 'NSB'
          AND PRODUCT_GROUP = 'New Site'
          AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
          AND (MARKET = 'ILLINOIS/WISCONSIN'
            OR MARKET = 'ND/SD/NE/MN/IA' 
            OR MARKET = 'MISSOURI/KANSAS' 
            OR MARKET = 'ARKANSAS/OKLAHOMA' 
            OR MARKET = 'NORTH TEXAS'
            OR MARKET = 'SOUTH TEXAS')
          AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
LEFT JOIN (
SELECT MOD_CODE, PRODUCT_GROUP, COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL) AS YTD_COMPLETE,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) AS REMAINING,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                )THEN 1 ELSE 0
             END)
             AS LASTMONTHCOMP,          
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,          
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS BNBD_PERCCOMP,             
          SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END)
             AS WITHIN90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS W90NBD_PERCCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 
                THEN 1 ELSE 0
             END)
             AS AFTER90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS A90NBD_PERCCOMP,
          SUM (CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS NEXTMONTH,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) - SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)
- SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)AS REMAINFORECAST
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'ND/SD/NE/MN/IA')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY MOD_CODE, PRODUCT_GROUP)
t2 on t1.MOD_CODE = t2.MOD_CODE
ORDER BY t1.MOD_CODE
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetNSB_breakdown_NTX()
    {
        string sql = @"SELECT 
t1.MOD_CODE, t1.PRODUCT_GROUP,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.REMAINING,0) REMAINING,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.BNBD_PERCCOMP,0) BNBD_PERCCOMP,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.W90NBD_PERCCOMP,0) W90NBD_PERCCOMP,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.A90NBD_PERCCOMP,0) A90NBD_PERCCOMP,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.REMAINFORECAST,0) REMAINFORECAST
FROM (SELECT DISTINCT MOD_CODE, PRODUCT_GROUP
        FROM PONDER.PACE_POE
        WHERE STATUS IN ('Active', 'Complete')
          AND NATIONAL_PROGRAM = 'NSB'
          AND PRODUCT_GROUP = 'New Site'
          AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
          AND (MARKET = 'ILLINOIS/WISCONSIN'
            OR MARKET = 'ND/SD/NE/MN/IA' 
            OR MARKET = 'MISSOURI/KANSAS' 
            OR MARKET = 'ARKANSAS/OKLAHOMA' 
            OR MARKET = 'NORTH TEXAS'
            OR MARKET = 'SOUTH TEXAS')
          AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
LEFT JOIN (
SELECT MOD_CODE, PRODUCT_GROUP, COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL) AS YTD_COMPLETE,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) AS REMAINING,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                )THEN 1 ELSE 0
             END)
             AS LASTMONTHCOMP,          
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,          
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS BNBD_PERCCOMP,             
          SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END)
             AS WITHIN90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS W90NBD_PERCCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 
                THEN 1 ELSE 0
             END)
             AS AFTER90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS A90NBD_PERCCOMP,
          SUM (CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS NEXTMONTH,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) - SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)
- SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)AS REMAINFORECAST
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'NORTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY MOD_CODE, PRODUCT_GROUP)
t2 on t1.MOD_CODE = t2.MOD_CODE
ORDER BY t1.MOD_CODE
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetNSB_breakdown_STX()
    {
        string sql = @"SELECT 
t1.MOD_CODE, t1.PRODUCT_GROUP,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.REMAINING,0) REMAINING,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.BNBD_PERCCOMP,0) BNBD_PERCCOMP,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.W90NBD_PERCCOMP,0) W90NBD_PERCCOMP,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.A90NBD_PERCCOMP,0) A90NBD_PERCCOMP,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.REMAINFORECAST,0) REMAINFORECAST
FROM (SELECT DISTINCT MOD_CODE, PRODUCT_GROUP
        FROM PONDER.PACE_POE
        WHERE STATUS IN ('Active', 'Complete')
          AND NATIONAL_PROGRAM = 'NSB'
          AND PRODUCT_GROUP = 'New Site'
          AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
          AND (MARKET = 'ILLINOIS/WISCONSIN'
            OR MARKET = 'ND/SD/NE/MN/IA' 
            OR MARKET = 'MISSOURI/KANSAS' 
            OR MARKET = 'ARKANSAS/OKLAHOMA' 
            OR MARKET = 'NORTH TEXAS'
            OR MARKET = 'SOUTH TEXAS')
          AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018') t1
LEFT JOIN (
SELECT MOD_CODE, PRODUCT_GROUP, COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL) AS YTD_COMPLETE,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) AS REMAINING,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                )THEN 1 ELSE 0
             END)
             AS LASTMONTHCOMP,          
          SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,          
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS BNBD_PERCCOMP,             
          SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END)
             AS WITHIN90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS W90NBD_PERCCOMP,
          SUM (CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 
                THEN 1 ELSE 0
             END)
             AS AFTER90NBD,
          (CASE WHEN COUNT (ONAIR_ACTUAL) = 0 THEN 0 ELSE
          ROUND ( (SUM (CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                THEN 1 ELSE 0
             END) * 100 / COUNT (ONAIR_ACTUAL)), 2)
             END)
             AS A90NBD_PERCCOMP,
          SUM (CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE WHEN (TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN 1 ELSE 0
             END)
             AS NEXTMONTH,
COUNT(ONAIR_FORECAST) - COUNT(ONAIR_ACTUAL) - SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)
- SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END)AS REMAINFORECAST
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
  AND NATIONAL_PROGRAM = 'NSB'
  AND PRODUCT_GROUP = 'New Site'
  AND (POE_NAME = '2018 + NSB' OR POE_NAME = '2019 + NSB')
  AND (MARKET = 'SOUTH TEXAS')
  AND TO_CHAR(ONAIR_FORECAST, 'YYYY') = '2018'
GROUP BY MOD_CODE, PRODUCT_GROUP)
t2 on t1.MOD_CODE = t2.MOD_CODE
ORDER BY t1.MOD_CODE
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string Getdonut21()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM = 'LTE'
         AND POE_NAME in ('2018 + LTE', '2019 + LTE')
         AND MARKET = 'ARKANSAS/OKLAHOMA'
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut22()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM = 'LTE'
         AND POE_NAME in ('2018 + LTE', '2019 + LTE')
         AND MARKET = 'ILLINOIS/WISCONSIN'
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut23()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM = 'LTE'
         AND POE_NAME in ('2018 + LTE', '2019 + LTE')
         AND MARKET = 'MISSOURI/KANSAS'
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut24()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM = 'LTE'
         AND POE_NAME in ('2018 + LTE', '2019 + LTE')
         AND MARKET = 'ND/SD/NE/MN/IA'
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut25()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM = 'LTE'
         AND POE_NAME in ('2018 + LTE', '2019 + LTE')
         AND MARKET = 'NORTH TEXAS'
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut26()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM = 'LTE'
         AND POE_NAME in ('2018 + LTE', '2019 + LTE')
         AND MARKET = 'SOUTH TEXAS'
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut31()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'ARKANSAS/OKLAHOMA'
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut32()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'ILLINOIS/WISCONSIN'
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut33()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'MISSOURI/KANSAS'
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut34()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'ND/SD/NE/MN/IA'
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut35()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'NORTH TEXAS'
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string Getdonut36()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
          COUNT (ONAIR_FORECAST) AS POE_2018,
          COUNT (ONAIR_ACTUAL) AS YTD_COMPLETE,
          ROUND ( (COUNT (ONAIR_ACTUAL) * 100 / COUNT (ONAIR_FORECAST)), 2)
             AS PERCENT_COMPLETE,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') <
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS PREVMONTHSCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (ADD_MONTHS (SYSDATE, -1), 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS LASTMONTHCOMP,
          SUM (
             CASE
                WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') =
                         TO_CHAR (SYSDATE, 'YYYY-MM'))
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRMONTHCOMP,
          SUM (
             CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END)
             AS BEFORENBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS BNBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                      AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90)
                THEN
                   1
                ELSE
                   0
             END)
             AS WITHIN90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (    ONAIR_ACTUAL > CURRENT_NEED_BY_DATE
                                  AND ONAIR_ACTUAL <=
                                         CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS W90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1
                ELSE 0
             END)
             AS AFTER90NBD,
          CASE
             WHEN COUNT (ONAIR_ACTUAL) = 0
             THEN
                0
             ELSE
                ROUND (
                   (  SUM (
                         CASE
                            WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90)
                            THEN
                               1
                            ELSE
                               0
                         END)
                    * 100
                    / COUNT (ONAIR_ACTUAL)),
                   2)
          END
             AS A90NBD_PERCCOMP,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (SYSDATE, 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS CURRENTMONTH,
          SUM (
             CASE
                WHEN (    TO_CHAR (ONAIR_FORECAST, 'YYYY-MM') =
                             TO_CHAR (ADD_MONTHS (SYSDATE, 1), 'YYYY-MM')
                      AND ONAIR_ACTUAL IS NULL)
                THEN
                   1
                ELSE
                   0
             END)
             AS NEXTMONTH
   FROM PONDER.PACE_POE
   WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'SOUTH TEXAS'
   GROUP BY PRODUCT_GROUP
   ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetAROK2018LTE1CMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
        AND NATIONAL_PROGRAM = 'LTE'
        AND POE_NAME in ('2018 + LTE', '2019 + LTE')
        AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
        AND MARKET = 'ARKANSAS/OKLAHOMA'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetILWI2018LTE1CMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
        AND NATIONAL_PROGRAM = 'LTE'
        AND POE_NAME in ('2018 + LTE', '2019 + LTE')
        AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
        AND MARKET = 'ILLINOIS/WISCONSIN'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetMOKS2018LTE1CMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
        AND NATIONAL_PROGRAM = 'LTE'
        AND POE_NAME in ('2018 + LTE', '2019 + LTE')
        AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
        AND MARKET = 'MISSOURI/KANSAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetMNP2018LTE1CMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
        AND NATIONAL_PROGRAM = 'LTE'
        AND POE_NAME in ('2018 + LTE', '2019 + LTE')
        AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
        AND MARKET = 'ND/SD/NE/MN/IA'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetNTX2018LTE1CMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
        AND NATIONAL_PROGRAM = 'LTE'
        AND POE_NAME in ('2018 + LTE', '2019 + LTE')
        AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
        AND MARKET = 'NORTH TEXAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetSTX2018LTE1CMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE STATUS IN ('Active', 'Complete')
        AND NATIONAL_PROGRAM = 'LTE'
        AND POE_NAME in ('2018 + LTE', '2019 + LTE')
        AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
        AND MARKET = 'SOUTH TEXAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetAROK2018LTEACMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'ARKANSAS/OKLAHOMA'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetILWI2018LTEACMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'ILLINOIS/WISCONSIN'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetMOKS2018LTEACMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'MISSOURI/KANSAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetMNP2018LTEACMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'ND/SD/NE/MN/IA'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetNTX2018LTEACMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'NORTH TEXAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetSTX2018LTEACMILE()
    {
        //Construction Started
        string sql = @"SELECT PRODUCT_GROUP,
    COUNT(ONAIR_FORECAST) AS POE_2018,
    COUNT(JI022_ACTUAL) AS JI022_COMPLETE,
    ROUND((COUNT(JI022_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS JI022_PERCENT_COMPLETE,
    COUNT(SS020_ACTUAL) AS SS020_COMPLETE,
    ROUND((COUNT(SS020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS020_PERCENT_COMPLETE,
    COUNT(SS076_ACTUAL) AS SS076_COMPLETE,
    ROUND((COUNT(SS076_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS SS076_PERCENT_COMPLETE,
    COUNT(RE020_ACTUAL) AS RE020_COMPLETE,
    ROUND((COUNT(RE020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS RE020_PERCENT_COMPLETE,
    COUNT(CI025_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI025_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI025_PERCENT_COMPLETE,
    COUNT(CI020_ACTUAL) AS CI020_COMPLETE,
    ROUND((COUNT(CI020_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI020_PERCENT_COMPLETE,
    COUNT(CI050_ACTUAL) AS CI025_COMPLETE,
    ROUND((COUNT(CI050_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS CI050_PERCENT_COMPLETE,    
    COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
    ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE
FROM PONDER.PACE_POE
WHERE     STATUS IN ('Active', 'Complete')
         AND NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')
         AND POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
         AND EXTRACT(YEAR from ONAIR_FORECAST) = 2018
         AND MARKET = 'SOUTH TEXAS'
GROUP BY PRODUCT_GROUP
ORDER BY PRODUCT_GROUP";

        DataTable dt = new DataTable();

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>();
        Dictionary<string, object> row;
        foreach (DataRow dr in dt.Rows)
        {
            row = new Dictionary<string, object>();
            foreach (DataColumn col in dt.Columns)
            {
                row.Add(col.ColumnName, dr[col]);
            }
            rows.Add(row);
        }

        string objectdata = serializer.Serialize(rows);
        return objectdata;
    }
    [WebMethod]
    public static string GetLTEAC_breakdown_AROK()
    {
        string sql = @"SELECT 
t1.BLOCK_BAND, t1.PRODUCT_GROUP, t1.FREQ_BLOCK,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP
FROM (SELECT DISTINCT SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND, PONDER.PACE_POE.PRODUCT_GROUP
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')) t1
left join (
SELECT BLOCK_BAND, PRODUCT_GROUP, FREQ_BLOCK,
COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
SUM(CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,
SUM(CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90) THEN 1 ELSE 0 END) AS WITHIN90NBD,
SUM(CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1 ELSE 0 END) AS AFTER90NBD, 
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS CURRENTMONTH,  
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS NEXTMONTH,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS LASTMONTHCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP 
FROM
(SELECT
SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND,
PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PLAN_BASE.SPECTRUM, PONDER.PACE_POE.ONAIR_FORECAST, PONDER.PACE_POE.ONAIR_ACTUAL, PONDER.PACE_POE.CURRENT_NEED_BY_DATE
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ARKANSAS/OKLAHOMA'))
GROUP BY PRODUCT_GROUP, FREQ_BLOCK, BLOCK_BAND)
t2 on t1.BLOCK_BAND = t2.BLOCK_BAND
ORDER BY t1.BLOCK_BAND
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetLTEAC_breakdown_ILWI()
    {
        string sql = @"SELECT 
t1.BLOCK_BAND, t1.PRODUCT_GROUP, t1.FREQ_BLOCK,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP
FROM (SELECT DISTINCT SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND, PONDER.PACE_POE.PRODUCT_GROUP
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')) t1
left join (
SELECT BLOCK_BAND, PRODUCT_GROUP, FREQ_BLOCK,
COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
SUM(CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,
SUM(CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90) THEN 1 ELSE 0 END) AS WITHIN90NBD,
SUM(CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1 ELSE 0 END) AS AFTER90NBD, 
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS CURRENTMONTH,  
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS NEXTMONTH,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS LASTMONTHCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP 
FROM
(SELECT
SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND,
PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PLAN_BASE.SPECTRUM, PONDER.PACE_POE.ONAIR_FORECAST, PONDER.PACE_POE.ONAIR_ACTUAL, PONDER.PACE_POE.CURRENT_NEED_BY_DATE
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ILLINOIS/WISCONSIN'))
GROUP BY PRODUCT_GROUP, FREQ_BLOCK, BLOCK_BAND)
t2 on t1.BLOCK_BAND = t2.BLOCK_BAND
ORDER BY t1.BLOCK_BAND
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetLTEAC_breakdown_MOKS()
    {
        string sql = @"SELECT 
t1.BLOCK_BAND, t1.PRODUCT_GROUP, t1.FREQ_BLOCK,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP
FROM (SELECT DISTINCT SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND, PONDER.PACE_POE.PRODUCT_GROUP
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')) t1
left join (
SELECT BLOCK_BAND, PRODUCT_GROUP, FREQ_BLOCK,
COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
SUM(CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,
SUM(CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90) THEN 1 ELSE 0 END) AS WITHIN90NBD,
SUM(CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1 ELSE 0 END) AS AFTER90NBD, 
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS CURRENTMONTH,  
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS NEXTMONTH,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS LASTMONTHCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP 
FROM
(SELECT
SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND,
PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PLAN_BASE.SPECTRUM, PONDER.PACE_POE.ONAIR_FORECAST, PONDER.PACE_POE.ONAIR_ACTUAL, PONDER.PACE_POE.CURRENT_NEED_BY_DATE
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('MISSOURI/KANSAS'))
GROUP BY PRODUCT_GROUP, FREQ_BLOCK, BLOCK_BAND)
t2 on t1.BLOCK_BAND = t2.BLOCK_BAND
ORDER BY t1.BLOCK_BAND
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetLTEAC_breakdown_MNP()
    {
        string sql = @"SELECT 
t1.BLOCK_BAND, t1.PRODUCT_GROUP, t1.FREQ_BLOCK,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP
FROM (SELECT DISTINCT SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND, PONDER.PACE_POE.PRODUCT_GROUP
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')) t1
left join (
SELECT BLOCK_BAND, PRODUCT_GROUP, FREQ_BLOCK,
COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
SUM(CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,
SUM(CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90) THEN 1 ELSE 0 END) AS WITHIN90NBD,
SUM(CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1 ELSE 0 END) AS AFTER90NBD, 
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS CURRENTMONTH,  
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS NEXTMONTH,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS LASTMONTHCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP 
FROM
(SELECT
SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND,
PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PLAN_BASE.SPECTRUM, PONDER.PACE_POE.ONAIR_FORECAST, PONDER.PACE_POE.ONAIR_ACTUAL, PONDER.PACE_POE.CURRENT_NEED_BY_DATE
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ND/SD/NE/MN/IA'))
GROUP BY PRODUCT_GROUP, FREQ_BLOCK, BLOCK_BAND)
t2 on t1.BLOCK_BAND = t2.BLOCK_BAND
ORDER BY t1.BLOCK_BAND
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetLTEAC_breakdown_NTX()
    {
        string sql = @"SELECT 
t1.BLOCK_BAND, t1.PRODUCT_GROUP, t1.FREQ_BLOCK,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP
FROM (SELECT DISTINCT SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND, PONDER.PACE_POE.PRODUCT_GROUP
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')) t1
left join (
SELECT BLOCK_BAND, PRODUCT_GROUP, FREQ_BLOCK,
COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
SUM(CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,
SUM(CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90) THEN 1 ELSE 0 END) AS WITHIN90NBD,
SUM(CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1 ELSE 0 END) AS AFTER90NBD, 
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS CURRENTMONTH,  
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS NEXTMONTH,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS LASTMONTHCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP 
FROM
(SELECT
SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND,
PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PLAN_BASE.SPECTRUM, PONDER.PACE_POE.ONAIR_FORECAST, PONDER.PACE_POE.ONAIR_ACTUAL, PONDER.PACE_POE.CURRENT_NEED_BY_DATE
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('NORTH TEXAS'))
GROUP BY PRODUCT_GROUP, FREQ_BLOCK, BLOCK_BAND)
t2 on t1.BLOCK_BAND = t2.BLOCK_BAND
ORDER BY t1.BLOCK_BAND
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }
    [WebMethod]
    public static string GetLTEAC_breakdown_STX()
    {
        string sql = @"SELECT 
t1.BLOCK_BAND, t1.PRODUCT_GROUP, t1.FREQ_BLOCK,
COALESCE(t2.POE_2018,0) POE_2018,
COALESCE(t2.YTD_COMPLETE,0) YTD_COMPLETE,
COALESCE(t2.PERCENT_COMPLETE,0) PERCENT_COMPLETE,
COALESCE(t2.BEFORENBD,0) BEFORENBD,
COALESCE(t2.WITHIN90NBD,0) WITHIN90NBD,
COALESCE(t2.AFTER90NBD,0) AFTER90NBD,
COALESCE(t2.CURRENTMONTH,0) CURRENTMONTH,
COALESCE(t2.NEXTMONTH,0) NEXTMONTH,
COALESCE(t2.PREVMONTHSCOMP,0) PREVMONTHSCOMP,
COALESCE(t2.LASTMONTHCOMP,0) LASTMONTHCOMP,
COALESCE(t2.CURRMONTHCOMP,0) CURRMONTHCOMP
FROM (SELECT DISTINCT SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND, PONDER.PACE_POE.PRODUCT_GROUP
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('ILLINOIS/WISCONSIN', 'ND/SD/NE/MN/IA', 'MISSOURI/KANSAS', 'ARKANSAS/OKLAHOMA', 'NORTH TEXAS', 'SOUTH TEXAS')) t1
left join (
SELECT BLOCK_BAND, PRODUCT_GROUP, FREQ_BLOCK,
COUNT(ONAIR_FORECAST) AS POE_2018,
COUNT(ONAIR_ACTUAL)AS YTD_COMPLETE,
ROUND((COUNT(ONAIR_ACTUAL) * 100 / COUNT(ONAIR_FORECAST)),2) AS PERCENT_COMPLETE,
SUM(CASE WHEN ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE THEN 1 ELSE 0 END) AS BEFORENBD,
SUM(CASE WHEN (ONAIR_ACTUAL > CURRENT_NEED_BY_DATE AND ONAIR_ACTUAL <= CURRENT_NEED_BY_DATE + 90) THEN 1 ELSE 0 END) AS WITHIN90NBD,
SUM(CASE WHEN ONAIR_ACTUAL > CURRENT_NEED_BY_DATE + 90 THEN 1 ELSE 0 END) AS AFTER90NBD, 
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(SYSDATE, 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS CURRENTMONTH,  
SUM(CASE WHEN (TO_CHAR(ONAIR_FORECAST, 'YYYY-MM') = TO_CHAR(ADD_MONTHS(SYSDATE, 1), 'YYYY-MM') AND ONAIR_ACTUAL IS NULL) THEN 1 ELSE 0 END) AS NEXTMONTH,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') < TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS PREVMONTHSCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (ADD_MONTHS(SYSDATE, -1), 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS LASTMONTHCOMP,
SUM (CASE WHEN (TO_CHAR (ONAIR_ACTUAL, 'YYYY-MM') = TO_CHAR (SYSDATE, 'YYYY-MM')
                ) THEN 1 ELSE 0
              END)
             AS CURRMONTHCOMP 
FROM
(SELECT
SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1) AS FREQ_BLOCK,
CASE  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'BAND 29') THEN '700_Band_29_DL_only'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700' AND (SUBSTR(PONDER.PLAN_BASE.SPECTRUM,(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2)+1),(LENGTH(PONDER.PLAN_BASE.SPECTRUM)-(INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',-1,2))))) = 'Band 14') THEN '700_Band_14_FNET'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '700') THEN '700_Band_17'  
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = '850') THEN '850_Band_5'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1') THEN 'AWS1_Band_4'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS1_3') THEN 'AWS_1_3_Bands_4_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'AWS3') THEN 'AWS3_Band_66'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'PCS') THEN 'PCS_Band_2'
  WHEN((SUBSTR(PONDER.PLAN_BASE.SPECTRUM,1,INSTR(PONDER.PLAN_BASE.SPECTRUM,' ',1,1)-1)) = 'WCS') THEN 'WCS_Band_30'
  ELSE 'N/A'
  END AS BLOCK_BAND,
PONDER.PACE_POE.PRODUCT_GROUP, PONDER.PLAN_BASE.SPECTRUM, PONDER.PACE_POE.ONAIR_FORECAST, PONDER.PACE_POE.ONAIR_ACTUAL, PONDER.PACE_POE.CURRENT_NEED_BY_DATE
FROM PONDER.PACE_POE
RIGHT OUTER JOIN PONDER.PLAN_BASE
ON PONDER.PACE_POE.PACE_NUMBER = PONDER.PLAN_BASE.PACE_NUMBER
WHERE PONDER.PACE_POE.STATUS IN ('Active', 'Complete')
  AND PONDER.PACE_POE.NATIONAL_PROGRAM IN ('LTE 2C', 'LTE 3C', 'LTE 4C', 'LTE 5C', 'LTE 6C', 'LTE 7C')    
  AND PONDER.PACE_POE.POE_NAME IN ('2018 + LTE 2C', '2019 + LTE 2C', '2017 + LTE 2C', '2018 + LTE 3C', '2019 + LTE 3C', '2017 + LTE 3C',
              '2018 + LTE 4C', '2019 + LTE 4C', '2017 + LTE 4C', '2018 + LTE 5C', '2019 + LTE 5C', '2017 + LTE 5C',
              '2018 + LTE 6C', '2019 + LTE 6C', '2017 + LTE 6C', '2018 + LTE 7C', '2019 + LTE 7C', '2017 + LTE 7C')
  AND EXTRACT(YEAR from PONDER.PACE_POE.ONAIR_FORECAST) = 2018
  AND PONDER.PACE_POE.MARKET IN ('SOUTH TEXAS'))
GROUP BY PRODUCT_GROUP, FREQ_BLOCK, BLOCK_BAND)
t2 on t1.BLOCK_BAND = t2.BLOCK_BAND
ORDER BY t1.BLOCK_BAND
"; //store your sql query in this string variable "sql"
        http://localhost:53262/capacity/haccordion.css
        DataTable dt = new DataTable(); //define a new DataTable object "dt"

        using (OracleConnection connection = new OracleConnection(ConfigurationManager.ConnectionStrings["AXIOM"].ConnectionString)) //open a connection to the AXIOM server
        {
            using (OracleCommand cmd = new OracleCommand(sql, connection)) //define a new OracleCommand "cmd" with your connection and query
            {
                using (OracleDataAdapter da = new OracleDataAdapter(cmd)) //define a new OracleDataAdapter "da" with your OracleCommand
                {
                    da.Fill(dt); //fill your DataTable "dt" with the data from your OracleDataAdapter "da"
                }
            }
        } // end of getting data from server

        JavaScriptSerializer serializer = new JavaScriptSerializer(); //define a new JavaScriptSerializer object "serializer"
        List<Dictionary<string, object>> rows = new List<Dictionary<string, object>>(); //define a new List "rows"
        Dictionary<string, object> row; //define a new Dictionary "row"
        foreach (DataRow dr in dt.Rows) //setup a loop to iterate through the rows "dr" your DataTable "dt"
        {
            row = new Dictionary<string, object>(); //define a new object to store your data in
            foreach (DataColumn col in dt.Columns) //setup a loop to iterate through the columns of the current row "dr" in your DataTable "dt"
            {
                row.Add(col.ColumnName, dr[col]); //add the data to your "row" object
            }
            rows.Add(row); //add the "row" to your "rows" object
        }

        string objectdata = serializer.Serialize(rows); //use the JavaScriptSerializer "serializer" to convert to a JSON string
        return objectdata; //return your data to the front end
    }

}